@charset "UTF-8";@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;700&display=swap);html{line-height:1.15;-webkit-text-size-adjust:100%}details,img,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}li{list-style:none}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,ol,p,ul{margin:0;padding:0}body{min-width:320px;scroll-behavior:smooth;overflow-x:hidden;font-family:"Poppins",sans-serif;font-size:400}.container{max-width:1140px;margin:0 auto;padding:0 15px}.header__inner,.header__photo{display:-webkit-box;display:-ms-flexbox;display:flex}.header__inner{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:50px}.header__photo{max-width:320px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__info{text-align:right}.header__info-title{font-size:90px;margin-bottom:20px}.header__info-subtitle{font-size:50px;color:#144aad;text-align:center;margin-bottom:30px;position:relative}.header__info-subtitle:after,.header__info-subtitle:before{content:"";position:absolute;top:30px;width:60px;border-bottom:2px solid #144aad}.header__info-subtitle:before{left:25px}.header__info-subtitle:after{right:25px}.header__contacts{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__contacts-left{text-align:left;font-size:20px;padding-top:32px}.header__contacts-left-country{margin-bottom:10px;position:relative;padding-left:35px}.header__contacts-left-country:before{content:"";position:absolute;top:-5px;left:0;width:24px;height:24px;background-image:url(../images/icons/place_black_24dp.svg)}.header__contacts-left-city{display:block}.header__contacts-left-city:before,.header__contacts-left-github:before{content:"";position:absolute;top:-5px;left:0;width:24px;height:24px;background-image:url(../images/icons/apartment_black_24dp.svg)}.header__contacts-left-city,.header__contacts-left-github{margin-bottom:10px;position:relative;padding-left:35px;color:#000}.header__contacts-left-github:before{top:0;background-image:url(../images/icons/iconmonstr-github-1.svg)}.header__contacts-right{display:block;font-size:20px;text-align:right;color:#000}.header__contacts-right-phone{text-align:right;text-decoration:none}.header__contacts-right-mail:before,.header__contacts-right-phone:before{content:"";position:absolute;top:0;left:-35px;width:24px;height:24px;background-image:url(../images/icons/call_black_24dp.svg)}.header__contacts-right-mail,.header__contacts-right-phone{display:block;color:#000;margin-bottom:10px;position:relative}.header__contacts-right-mail:before{background-image:url(../images/icons/email_black_24dp.svg)}.header__contacts-right-linkedin{margin-bottom:10px}.header__contacts-right-linkedin:before,.header__contacts-right-telegram:before{content:"";position:absolute;top:0;left:-35px;width:24px;height:24px;background-image:url(../images/icons/icons8-linkedin.svg)}.header__contacts-right-linkedin,.header__contacts-right-telegram{display:block;color:#000;position:relative}.header__contacts-right-telegram:before{background-image:url(../images/icons/icons8-telegram-app.svg)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */